# Docker Compose file for the CSLC Portal

# Define services for the application
services:
  # Backend service (Django REST framework)
  backend:
    container_name: backend
    build: ./backend  # Build the backend service using the Dockerfile in the ./backend directory
    restart: always  # Restart the backend service always (even if it exits normally)
    ports:
      - 6969:6969  # Map port 6969 on the host to port 6969 on the container
    volumes:
      # We want a way to persist the database from the container to the local machine
      - ./backend/db.sqlite3:/home/backend/db.sqlite3  # Mount the local db.sqlite3 file to the container

  # Frontend service
  frontend:
    container_name: frontend
    build:
      context: ./frontend  # Build the frontend service using the Dockerfile in the ./frontend directory
    depends_on:
      - backend  # Ensure that the backend service is started before the frontend service
    restart: always  # Restart the frontend service always (even if it exits normally)
    ports:
      - 4200:4200  # Map port 4200 on the host to port 4200 on the container
    tty: true  # Allocate a pseudo-TTY for the frontend service
    environment:
      - CHOKIDAR_USEPOLLING=true  # Enable polling for file changes in Chokidar
      - WATCHPACK_POLLING=true  # Enable polling for file changes in Watchpack
    volumes:
      # Mount specific directories and files to the container
      - ./frontend/src/:/home/frontend/src  # Mount the local ./frontend/src directory to /home/frontend/src in the container
      - ./frontend/vite.config.ts:/home/frontend/vite.config.js  # Mount the local vite.config.ts file to /home/frontend/vite.config.js in the container
      - ./frontend/tsconfig.json:/home/frontend/tsconfig.json  # Mount the local tsconfig.json file to /home/frontend/tsconfig.json in the container
    develop:
      watch:
        - action: sync
          path: frontend/src/components  # Watch for changes in the specified directory, excluding node_modules
    command: npm run dev  # Run the "npm run dev" command when starting the frontend service

  # Nginx server service
  server:
    container_name: nginx
    build: ./nginx  # Build the Nginx service using the Dockerfile in the ./nginx directory
    depends_on:
      - frontend  # Ensure that the frontend service is started before the Nginx service
    restart: always  # Restart the Nginx service always (even if it exits normally)
    ports:
      - 80:80  # Map port 80 on the host to port 80 on the container