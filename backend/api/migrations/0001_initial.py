# Generated by Django 4.2.7 on 2024-03-22 04:36

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Color",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("hex_color", models.CharField(max_length=50, unique=True)),
                ("description", models.CharField(max_length=500)),
            ],
            options={
                "verbose_name_plural": "colors",
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at_date", models.DateTimeField(auto_now_add=True)),
                ("updated_at_date", models.DateTimeField(auto_now=True, null=True)),
                ("content", models.TextField()),
                ("flagged", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name_plural": "comments",
            },
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                ("title", models.CharField(max_length=100)),
                ("department", models.CharField(max_length=25)),
                ("discriminator", models.IntegerField()),
                (
                    "course_id",
                    models.CharField(
                        max_length=15, primary_key=True, serialize=False, unique=True
                    ),
                ),
            ],
            managers=[
                ("generic", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Difficulty",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("icon", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("discriminator", models.CharField(max_length=255)),
                (
                    "color",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.color",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "difficulties",
            },
        ),
        migrations.CreateModel(
            name="Issues",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=1000)),
                ("description", models.TextField()),
                ("discriminator", models.CharField(max_length=100)),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("1", "1"),
                            ("2", "2"),
                            ("3", "3"),
                            ("4", "4"),
                            ("5", "5"),
                        ],
                        default="1",
                        max_length=1,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "issue_types",
            },
            managers=[
                ("generic", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="People",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("name", models.CharField(max_length=200)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("discriminator", models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Priority",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("icon", models.CharField(max_length=100)),
                ("color", models.CharField(max_length=50)),
                ("name", models.CharField(max_length=50)),
                ("discriminator", models.CharField(max_length=50, unique=True)),
            ],
            options={
                "verbose_name_plural": "priorities",
            },
        ),
        migrations.CreateModel(
            name="Professor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("active", models.BooleanField(default=False)),
                (
                    "info",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to="api.people"
                    ),
                ),
            ],
            managers=[
                ("professor", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "color",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.color",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Section",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("modality", models.CharField(default="001", max_length=10)),
                ("discriminator", models.CharField(max_length=255)),
                (
                    "course",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.course",
                    ),
                ),
                (
                    "professor",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.professor",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "sections",
            },
            managers=[
                ("generic", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Semester",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("year", models.IntegerField()),
                ("discriminator", models.BigIntegerField(unique=True)),
                (
                    "semester",
                    models.IntegerField(
                        choices=[
                            (0, "Summer"),
                            (1, "Fall"),
                            (2, "Jterm"),
                            (3, "Spring"),
                        ]
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name_plural": "semesters",
            },
            managers=[
                ("generic", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="Status",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=1000)),
                ("description", models.TextField()),
                ("discriminator", models.CharField(max_length=100)),
                (
                    "color",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.color"
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "status_types",
            },
            managers=[
                ("generic", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="UserSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("username", models.CharField(max_length=150)),
                ("biography", models.TextField(blank=True, null=True)),
                ("preferred_name", models.CharField(max_length=150)),
                ("pronouns", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "color",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.color"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("last_login_date", models.DateTimeField(auto_now=True, null=True)),
                ("created_at_date", models.DateField(auto_now_add=True, null=True)),
                (
                    "info",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.people"
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.role",
                    ),
                ),
                (
                    "settings",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.usersettings",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=250)),
                ("description", models.CharField(max_length=500)),
                ("content", models.TextField()),
                ("flagged", models.BooleanField(default=False)),
                ("created_at_date", models.DateTimeField(auto_now_add=True)),
                ("last_updated_at_date", models.DateTimeField(blank=True, null=True)),
                ("priority", models.IntegerField(default=0)),
                (
                    "assistant_tutor",
                    models.ManyToManyField(
                        blank=True, related_name="assistant_tutors", to="api.user"
                    ),
                ),
                (
                    "difficulty",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.difficulty",
                    ),
                ),
                (
                    "issue",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.issues",
                    ),
                ),
                (
                    "issuing_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="ticket_issuing_user",
                        to="api.user",
                    ),
                ),
                (
                    "last_updated_by_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="ticket_last_updated_by_user",
                        to="api.user",
                    ),
                ),
                (
                    "principal_tutor",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="ticket_principal_tutor",
                        to="api.user",
                    ),
                ),
                (
                    "professor",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.professor",
                    ),
                ),
                (
                    "section",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.section",
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.status",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="section",
            name="semester",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="api.semester",
            ),
        ),
        migrations.CreateModel(
            name="OpeningHours",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "day_of_week",
                    models.CharField(
                        choices=[
                            ("MON", "Monday"),
                            ("TUE", "Tuesday"),
                            ("WED", "Wednesday"),
                            ("THU", "Thursday"),
                            ("FRI", "Friday"),
                            ("SAT", "Saturday"),
                            ("SUN", "Sunday"),
                        ],
                        max_length=3,
                    ),
                ),
                ("opening_time", models.TimeField()),
                ("closing_time", models.TimeField()),
                (
                    "tutor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.user"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Messages",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message_content", models.TextField(max_length=128)),
                ("created_date", models.DateTimeField(auto_now_add=True)),
                (
                    "sender",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="api.user"
                    ),
                ),
                (
                    "ticket",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.ticket",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "messages",
            },
            managers=[
                ("generic", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="LovedTickets",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("loved_at_date", models.DateField(auto_now_add=True)),
                (
                    "ticket",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.ticket",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.user",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "loved_tickets",
            },
        ),
        migrations.CreateModel(
            name="LovedComments",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("loved_at_date", models.DateField(auto_now_add=True)),
                (
                    "ticket",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.comment",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.user",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "loved_comments",
            },
        ),
        migrations.AddField(
            model_name="comment",
            name="issuing_user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="comment_issuing_user",
                to="api.user",
            ),
        ),
        migrations.AddField(
            model_name="comment",
            name="last_updated_by_user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="commented_last_updated_by",
                to="api.user",
            ),
        ),
        migrations.AddField(
            model_name="comment",
            name="ticket",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.SET_NULL, to="api.ticket"
            ),
        ),
        migrations.CreateModel(
            name="AnnouncementType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("icon", models.CharField(max_length=255)),
                (
                    "color",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.color",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Announcement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateTimeField(blank=True)),
                ("end_date", models.DateTimeField(blank=True)),
                ("created_at_date", models.DateTimeField(auto_now_add=True)),
                ("visible_end_date", models.BooleanField(default=False)),
                ("content", models.TextField(blank=True)),
                ("title", models.TextField(blank=True)),
                (
                    "issuing_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.user",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.announcementtype",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "announcements",
            },
        ),
    ]
