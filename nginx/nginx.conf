# This configuration will be used by the NGINX Docker container when hosting the application

# Define an NGINX server block
server {
    listen *:80;  # Listen on port 80 for incoming connections
    server_name localhost;  # Set the server name to localhost

    # Pass requests to the backend service for paths starting with /api/
    location /api/ {
        proxy_pass http://backend:6969;  # Proxy requests to the backend service at http://backend:6969
    }

    # Handle all other requests for the frontend
    location / {
        proxy_set_header 'Access-Control-Allow-Credentials' 'true';  # Set custom header for CORS support
        proxy_pass http://frontend:4200;  # Proxy requests to the frontend service at http://frontend:4200
        proxy_connect_timeout 300;  # Set the maximum time to wait for a connection to the backend server
        proxy_send_timeout 300;  # Set the maximum time to wait for the backend server to process a request
        proxy_read_timeout 300;  # Set the maximum time to wait for data to be read from the backend server
        send_timeout 300;  # Set the maximum time for sending data to the client
        proxy_set_header Host $host;  # Set the Host header to the original host
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Set the X-Forwarded-For header to the client's IP address
        proxy_set_header X-Forwarded-Proto $scheme;  # Set the X-Forwarded-Proto header to the original scheme (http or https)
        proxy_set_header Connection "";  # Set the Connection header to an empty string to disable keep-alive connections
    }
}